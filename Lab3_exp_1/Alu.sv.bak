module Alu #(parameter N=4) (input [N-1:0] A, B, output [N-1:0] RSUM,RSUB,RMULT,RDIV,RMOD,RAND,ROR,RXOR,RSHR,RSHL);

	logic [N:0] R_aux_SUM,R_aux_SUB,R_aux_MULT,R_aux_DIV,R_aux_MOD,R_aux_AND,R_aux_OR,R_aux_XOR,R_aux_SHR,R_aux_SHL;

	sumador adder (A,B,R_aux_SUM);
	restador substractor (A,B,R_aux_SUB);
	multiplicador multiplier (A,B,R_aux_MULT);
	division divisor (A,B,R_aux_DIV);
	modulo modulus (A,B,R_aux_MOD);
	and_op _and (A,B,R_aux_AND);
	or_op _or (A,B,R_aux_OR);
	xor_op _xor (A,B,R_aux_XOR);
	shiftR _shiftR (A,B,R_aux_SHR);
	shiftL _shiftL (A,B,R_aux_SHL);
	
	
	
endmodule